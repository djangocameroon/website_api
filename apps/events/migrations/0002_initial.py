# Generated by Django 5.2.4 on 2025-07-06 16:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='event',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='updated_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventcity',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventregion'),
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=models.ManyToManyField(default=None, help_text='The tags for the event', related_name='events', to='events.eventtag', verbose_name='Event tags'),
        ),
        migrations.AddField(
            model_name='eventvenue',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventcity'),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(help_text='The location of the event', on_delete=django.db.models.deletion.CASCADE, to='events.eventvenue', verbose_name='Event location'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reservation',
            name='for_event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='events.event', verbose_name='event'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='updated_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reservation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='speaker',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='speaker',
            name='updated_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='speakers',
            field=models.ManyToManyField(help_text='The speakers at the event', related_name='events', to='events.speaker', verbose_name='Event speakers'),
        ),
        migrations.AddField(
            model_name='speakersocialmedia',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='speakersocialmedia',
            name='platform',
            field=models.ForeignKey(help_text='Social media platform', on_delete=django.db.models.deletion.CASCADE, to='events.availablesocialmedia', verbose_name='Social Media Platform'),
        ),
        migrations.AddField(
            model_name='speakersocialmedia',
            name='speaker',
            field=models.ForeignKey(help_text="Speaker's social media", on_delete=django.db.models.deletion.CASCADE, related_name='social_media', to='events.speaker', verbose_name='Speaker'),
        ),
        migrations.AddField(
            model_name='speakersocialmedia',
            name='updated_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='speaker',
            name='speciality',
            field=models.ForeignKey(blank=True, help_text="Speaker's speciality", null=True, on_delete=django.db.models.deletion.CASCADE, to='events.speakerspeciality', verbose_name='Speciality'),
        ),
        migrations.AlterUniqueTogether(
            name='reservation',
            unique_together={('for_event', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='event',
            unique_together={('title', 'date', 'location')},
        ),
        migrations.AlterUniqueTogether(
            name='speakersocialmedia',
            unique_together={('speaker', 'platform')},
        ),
    ]
